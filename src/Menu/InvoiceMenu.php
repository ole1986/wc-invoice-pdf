<?php

namespace WcRecurring\Menu;

use WcRecurring\Model\Placeholder\CompanyDetails;
use WcRecurring\Model\InvoiceList;
use WcRecurring\Model\Invoice;

use WcRecurring\WcRecurringIndex;

class InvoiceMenu
{
    public function __construct()
    {
        if (defined('DOING_AJAX') && DOING_AJAX) {
            return;
        }
        
        if (is_admin()) {
            add_action('admin_menu', array( $this, 'admin_menu' ));
        }
    }

    public function admin_menu()
    {
        add_menu_page('WC-' . __('Invoices', 'wc-invoice-pdf'), 'WC-' . __('Invoices', 'wc-invoice-pdf'), 'null', 'wcinvoicepdf_menu', null, WCRECURRING_PLUGIN_URL.'invoicepdf.png', 3);
        add_submenu_page('wcinvoicepdf_menu', __('Invoices', 'wc-invoice-pdf'), __('Invoices', 'wc-invoice-pdf'), 'edit_themes', 'wcinvoicepdf_invoices', [$this, 'DisplayInvoices']);
        add_submenu_page('wcinvoicepdf_menu', __('Settings'), __('Settings'), 'edit_themes', 'wcinvoicepdf_settings', [$this, 'DisplaySettings']);
        // hide the menu using null
        add_submenu_page(null, '_Invoice', '_Invoice', 'wc_invoice_pdf', 'wcinvoicepdf_invoice', [$this, 'OpenInvoice']);
    }

    /**
     * Check for permission on specific invoices being generated by the sytem and populated to users "My Account" page.
     * Also it validates the access for administrative users to generate invoices/quotes
     */
    private function userHasAccess($invoice)
    {
        global $current_user;
        
        // only for logged in users
        if (!is_user_logged_in()) {
            return false;
        }

        if (!current_user_can('manage_options') && $invoice->customer_id != $current_user->ID) {
            return false;
        }

        return true;
    }

    /**
     * Used to open or generate invoices.
     * This method is also used in front end through "My Account" endpoint
     */
    public function OpenInvoice()
    {
        // remove previous output to generate a clean pdf result
        ob_clean();

        $offer = !empty($_GET['offer']) ? true : false;

        if (!empty($_GET['order'])) {
            $order = new \WC_Order(intval($_GET['order']));

            $invoice = new Invoice($order);

            //$invoicepdf = new InvoicePdf();

            if (!$this->userHasAccess($invoice)) {
                wp_die("You do not have access to generate invoices");
            }

            $invoice->makeNew($offer);

            header("Content-type: application/pdf");
            header("Content-Disposition: inline; filename=".$invoice->invoice_number .'.pdf');

            echo $invoice->document;
        } elseif (!empty($_GET['invoice'])) {
            $invoice = new Invoice(intval($_GET['invoice']));

            if (!$invoice->ID) {
                wp_die(__('Invoice not found our no access to this resource', 'wc-invoice-pdf'));
            }

            if (!$this->userHasAccess($invoice)) {
                wp_die(__('Invoice not found our no access to this resource', 'wc-invoice-pdf'));
            }

            if (!empty($_GET['xml'])) {
                header("Content-type: application/xml");
                header("Content-Disposition: attachment; filename=".$invoice->invoice_number .'.xml');
    
                echo $invoice->xinvoice;
            } else {
                header("Content-type: application/pdf");
                header("Content-Disposition: inline; filename=".$invoice->invoice_number .'.pdf');
    
                echo $invoice->document;
            }
        }

        die;
    }

    /**
     * Display a list of all available invoices
     */
    public function DisplayInvoices()
    {
        global $wpdb;
        $invList = new InvoiceList();
        
        $a = $invList->current_action();
        $invList->prepare_items();

        // get the invoice_reminder cron job installed by this plugin
        $cron_jobs = get_option('cron');
        $invoice_reminder_event = array_filter($cron_jobs, function ($v) {
            return isset($v['invoice_reminder']);
        });

        $isInvoiceSubmissionEnabled = WcRecurringIndex::$OPTIONS['wc_recur'];

        ?>
        <div class='wrap'>
            <h1><?php _e('Invoices', 'wc-invoice-pdf') ?></h1>
            <?php if (count($invoice_reminder_event) > 0 && $isInvoiceSubmissionEnabled) :
                $event_time = key($invoice_reminder_event);

                $d = new \DateTime();
                $d->setTimezone(new \DateTimeZone(get_option('timezone_string', 'UTC') ?: 'UTC'));
                $d->setTimestamp($event_time);
                ?>
            <div class="updated"><p><?php printf(__('The next automated invoice submission is scheduled for %s', 'wc-invoice-pdf'), $d->format('Y-m-d H:i')); ?></p></div>
            <?php endif; ?>
            <?php if (!$isInvoiceSubmissionEnabled) : ?>
            <div class="error"><p><?php _e("The scheduler is disabled for automated invoice submission. Please check the <a href='/wp-admin/admin.php?page=wcinvoicepdf_settings'>settings</a>", 'wc-invoice-pdf') ?></p></div>
            <?php endif; ?>
            <h2></h2>
            <form action="" method="GET">
                <input type="hidden" name="page" value="<?php echo esc_attr($_REQUEST['page']) ?>" />
                <input type="hidden" name="action" value="filter" />
                <label class="post-attributes-label" for="user_login"><?php _e('Customer', 'woocommerce') ?></label>
                <select name="customer_id" style="min-width: 200px">
                    <option value=""></option>
                <?php
                $users = get_users(['role' => 'customer']);
                foreach ($users as $u) {
                    $company = get_user_meta($u->ID, 'billing_company', true);
                    $selected = (isset($_GET['customer_id']) && $u->ID == intval($_GET['customer_id']))?'selected':'';
                    echo '<option value="'.$u->ID.'" '.$selected.'>'. $company . ' (' .$u->user_login.')</option>';
                }
                ?>
                </select>
                <input type="checkbox" id="recur_only" name="recur_only" value="1" <?php echo (!empty($_GET['recur_only'])?'checked':'') ?> /> <label for="recur_only"><?php _e('Recurring payments', 'wc-invoice-pdf') ?></label>
                <input type="submit" class="button" value="<?php _e('Filter &#187;') ?>">
            </form>
            <form action="" method="POST">
                <div style="margin-top: 1em">
                    <?php if (isset($_GET['post_status'])) : ?>
                        <a href="/wp-admin/admin.php?page=wcinvoicepdf_invoices"><?php _e('All') ?></a>
                    <?php else : ?>
                        <?php _e('All') ?>
                    <?php endif; ?>
                    |
                    <?php if (!isset($_GET['post_status'])) : ?>
                        <a href="<?php echo '?' . $_SERVER['QUERY_STRING'] . '&post_status=deleted'; ?>"><?php printf(__('Trash <span class="count">(%s)</span>'), $invList->total_trash_rows) ?></a>
                    <?php else : ?>
                        <?php printf(__('Trash <span class="count">(%s)</span>'), $invList->total_trash_rows) ?>
                    <?php endif; ?>
                </div>
                <?php $invList->display(); ?>
            </form>
        </div>
        <?php
    }

    /**
     * Show the avaialble settings
     */
    public function DisplaySettings()
    {
        $company = CompanyDetails::getInstance();
        ?>
        <div class="wc-recurring-settings">
            <h1><?php _e('WC-Invoice Settings', 'wc-invoice-pdf');?></h1>
            <?php
            if ('POST' === $_SERVER[ 'REQUEST_METHOD' ]) {
                check_admin_referer('wc-recurring-settings');

                WcRecurringIndex::$OPTIONS = $_POST;
                if (WcRecurringIndex::save_options()) {
                    ?><div class="updated"><p> <?php _e('Settings saved', 'wc-invoice-pdf');?></p></div><?php
                }
            }
            ?>
            <?php if (wp_get_schedule('invoice_reminder')) : ?>
                <div class="notice notice-info"><p><?php _e('The schedule is properly installed and running', 'wc-invoice-pdf') ?></p></div>
            <?php else : ?>
                <div class="notice notice-error"><p><?php _e('The scheduled task is not installed - Please try to reenable the plugin', 'wc-invoice-pdf') ?></p></div>
            <?php endif; ?>
            <h2 id="wcinvoicepdf-tabs" class="nav-tab-wrapper">
                <a href="#wcinvoicepdf-order" class="nav-tab nav-tab-active"><?php _e('General', 'wc-invoice-pdf') ?></a>
                <a href="#wcinvoicepdf-invoice" class="nav-tab"><?php _e('Invoice template', 'wc-invoice-pdf') ?></a>
                <a href="#wcinvoicepdf-template" class="nav-tab"><?php _e('Email templates', 'wc-invoice-pdf') ?></a>
                <a href="#wcinvoicepdf-export" class="nav-tab"><?php _e('Export', 'wc-invoice-pdf') ?></a>
            </h2>
            <form method="post" action="">
                <div id="wcinvoicepdf-order" class="inside tabs-panel" style="display: none;">
                    <div class="wc-recurring-scheduler">
                        <div class="wc-recurring-postbox postbox">
                            <div class="postbox-header">
                                <h4>Payment notifcation [internal]</h4>
                                <div class="handle-actions hide-if-no-js">
                                    <a href="javascript:void(0)" onclick="WcRecuringAdmin.RunTask(this, 'notify')" class="components-button is-compact">Run</a>
                                </div>
                            </div>
                            <p>
                                Run the payment notifier now and submit outstanding invoice information to <strong><?php _e('Report recipient', 'wc-invoice-pdf') ?></strong>.
                            </p>
                        </div>
                        <div class="wc-recurring-postbox postbox">
                            <div class="postbox-header">
                                <h4>Generate Invoices</h4>
                                <div class="handle-actions hide-if-no-js">
                                    <a href="javascript:void(0)" onclick="WcRecuringAdmin.RunTask(this, 'recur')" class="components-button is-compact">Run</a>
                                </div>
                            </div>
                            <p>
                                Generate all recurring invoices for today. Please be careful with this as it may generate (and later submit) duplicates to the recipients
                            </p>
                        </div>
                        <div class="wc-recurring-postbox postbox">
                            <div class="postbox-header">
                                <h4>Submit Invoices</h4>
                                <div class="handle-actions hide-if-no-js">
                                    <a href="javascript:void(0)" onclick="WcRecuringAdmin.RunTask(this, 'submit')" class="components-button is-compact"">Run</a>
                                </div>
                            </div>
                            <p>
                                Submit all outstanding invoices to their recipients
                            </p>
                        </div>
                        <div class="wc-recurring-postbox postbox">
                            <div class="postbox-header">
                                <h4>Trigger Invoice reminder</h4>
                                <div class="handle-actions hide-if-no-js">
                                    <a href="javascript:void(0)" onclick="WcRecuringAdmin.RunTask(this, 'reminder')" class="components-button is-compact">Run</a>
                                </div>
                            </div>
                            <p>
                                Submit all reminder for invoice which are due. Please be careful with this as it will re-submit the reminders and increase the counter
                            </p>
                        </div>
                    </div>
                    <div style="display: flex; flex-direction: row; flex-wrap: wrap">
                        <div class="wc-recurring-postbox postbox">
                            <div class="postbox-header">
                                <h4><?php _e('Business', 'wc-invoice-pdf') ?></h4>
                            </div>
                            <?php
                                $this->addField('wc_company_name', '<strong>' . __('Company name', 'wc-invoice-pdf') . '</strong><br />' . __('Enter your company name', 'wc-invoice-pdf'));
                            ?>
                            <?php
                                $this->addField('wc_company_email', '<strong>' . __('Contact email', 'wc-invoice-pdf') . '</strong><br />' . __('Enter invoice contact email address', 'wc-invoice-pdf'));
                            ?>
                            <?php
                                $this->addField('wc_company_vat', '<strong>' . __('VAT ID', 'wc-invoice-pdf') . '</strong><br />' . __('Enter your VAT ID', 'wc-invoice-pdf'));
                            ?>
                            <p>
                                <label style="width: 220px; display:inline-block;vertical-align:top;">
                                    <strong>Address</strong>
                                </label>
                                <?php echo $company->getSingleAddress() ?>
                            </p>
                            <p>Further address details are located in <a href="?page=wc-settings&tab=general">Woocommerce -> Settings</a></p>
                            <?php
                                $this->addField('wc_pdf_xinvoice', '<strong>' . __('Enable XInvoice', 'wc-invoice-pdf') . '</strong><br />' . __('Enable support for XInvoice (XML)', 'wc-invoice-pdf'), 'checkbox');
                            ?>
                            <?php
                                $this->addField('wc_order_show_completed', '<strong>' . __('Order account filter', 'wc-invoice-pdf') . '</strong><br />' . __('Only show completed WooCommerce orders on customers account page', 'wc-invoice-pdf'), 'checkbox');
                            ?>
                            <?php
                                $this->addField('wc_pdf_b2c', '<strong>' . __('Enable B2C', 'wc-invoice-pdf') . '</strong><br />' . __('Create invoice compatible for Business to Customer (B2C) relationship', 'wc-invoice-pdf'), 'checkbox');
                            ?>
                            <?php
                                $this->addField('wc_invoice_due_days', '<strong>' . __('Due date in days', 'wc-invoice-pdf') . '</strong><br />' . __('The number of days an invoice becomes due', 'wc-invoice-pdf'), 'number');
                            ?>
                            <p>
                            <label style="width: 220px; display:inline-block;vertical-align:top;">
                                <strong><?php _e('Subscription option', 'wc-invoice-pdf')  ?></strong><br />
                                <?php _e('Allow the customer to choose between the subscriptions during checkout or fix a value', 'wc-invoice-pdf') ?>
                            </label>
                            <select name="wc_order_subscriptions">
                                <option value=""><?php _e('Customer choose', 'wc-invoice-pdf') ?></option>
                                <?php
                                foreach (WcRecurringIndex::$SUBSCRIPTIONS as $key => $value) {
                                    $selected = WcRecurringIndex::$OPTIONS['wc_order_subscriptions'] == $key ? 'selected' : '';
                                    echo '<option value="'. $key . '" '. $selected .'>'. $value .'</option>';
                                }
                                ?>
                            </select>
                            </p>
                            <h4><?php _e('Email details', 'wc-invoice-pdf') ?></h4>
                            <?php
                            $this->addField('wc_mail_reminder', '<strong>' . __('Report recipient', 'wc-invoice-pdf') . '</strong><br />' . __('Reciepient address for payment reports', 'wc-invoice-pdf'));
                            $this->addField('wc_mail_sender', '<strong>' . __('Sender address', 'wc-invoice-pdf') . '</strong><br />' . __('Public sender address the invoice is being submitted', 'wc-invoice-pdf'));
                            ?>
                        </div>
                        <div class="wc-recurring-postbox postbox">
                            <div class="postbox-header">
                                <h4><?php _e('Task Scheduler', 'wc-invoice-pdf') ?></h4>
                            </div>
                            <?php
                            $this->addField('wc_recur_test', '<span style="color: red; font-weight: bold">Test Mode</span><br />' . __('Enable test mode and replace all recipients with the admin email address', 'wc-invoice-pdf'), 'checkbox');
                            $this->addField('wc_payment_reminder', '<strong>'. __('Payment report', 'wc-invoice-pdf') .'</strong><br />Send a daily report of unpaid invoices to "Admin Email"', 'checkbox');
                            $this->addField('wc_recur', '<strong>' . __('Automate invoice submission', 'wc-invoice-pdf').'</strong><br />' . __('Enable automate invoice submission to customers on a daily schedule', 'wc-invoice-pdf'), 'checkbox');
                            $this->addField('wc_recur_reminder', '<strong>'. __('Payment reminder', 'wc-invoice-pdf').'</strong><br />' . __('Send payment reminders to customer when invoice is due', 'wc-invoice-pdf'), 'checkbox');
                            $this->addField('wc_recur_reminder_age', '<strong>' . __('First reminder (days)', 'wc-invoice-pdf') . '</strong><br />' . __('The number of days (after due) when the first payment reminder should be sent to the customer', 'wc-invoice-pdf'));
                            $this->addField('wc_recur_reminder_interval', '<strong>'. __('Reminder interval', 'wc-invoice-pdf') .'</strong><br />The number of days (after first occurence) a reminder should be resent to customer');
                            $this->addField('wc_recur_reminder_max', '<strong>'. __('Max reminders', 'wc-invoice-pdf') .'</strong><br />How many reminders should be sent for a single invoice to the customer');
                            ?>
                        </div>
                    </div>
                </div>
                <div id="wcinvoicepdf-invoice" class="inside tabs-panel" style="display: none;">
                    <div style="display: flex; flex-direction: row; flex-wrap: wrap">
                        <div class="wc-recurring-postbox postbox">
                            <div class="postbox-header">
                                <h4><?php _e('Properties', 'wc-invoice-pdf') ?></h4>
                            </div>
                            <?php
                            $this->addField('wc_pdf_title', __('Document Title', 'wc-invoice-pdf'));
                            $this->addField('wc_pdf_logo', 'Logo', 'media');
                            $this->addField('wc_pdf_addressline', __('Address line', 'wc-invoice-pdf'));
                            $this->addField('wc_pdf_condition', __('Payment terms', 'wc-invoice-pdf'), 'textarea');
                            $this->addField('wc_pdf_condition_offer', __('Offer terms', 'wc-invoice-pdf'), 'textarea');
                            $this->addField('wc_pdf_info', '<strong>Info Block</strong><br />' . 'Supports "Inline codes" provided by the <a href="https://github.com/rospdf/pdf-php/blob/master/README.md" target="_blank">R&amp;OS pdf class</a>', 'textarea', ['input_attr' => ['style' => 'width: 340px; height: 100px']]);
                            $this->addField('wc_pdf_keeprows', '<strong>' . __('Protect rows from splitting', 'wc-invoice-pdf') . '</strong><br />' . __('Keep rows together when page breaks', 'wc-invoice-pdf'), 'checkbox');
                            ?>
                            <p>&nbsp;</p>
                            <table class="wc-recurring-table">
                                <thead>
                                    <tr>
                                        <th>Placeholder</th>
                                        <th>Description</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    <tr>
                                        <td>{COMPANY_NAME}</td>
                                        <td>company name from <?php _e('General', 'wc-invoice-pdf') ?> -&gt; <?php _e('Contact email', 'wc-invoice-pdf') ?></td>
                                    </tr>
                                    <tr>
                                        <td>{ADDRESS}</td>
                                        <td>street and no. from Woocommerce setting</td>
                                    </tr>
                                    <tr>
                                        <td>{POSTCODE}</td>
                                        <td>address postal code from Woocommerce setting</td>
                                    </tr>
                                    <tr>
                                        <td>{CITY}</td>
                                        <td>Name of the City from Woocommerce setting</td>
                                    </tr>
                                    <tr>
                                        <td>{EMAIL}</td>
                                        <td> Email address from <?php _e('General', 'wc-invoice-pdf') ?> -&gt; <?php _e('Contact email', 'wc-invoice-pdf') ?></td>
                                    </tr>
                                    <tr>
                                        <td>{VAT_ID}</td>
                                        <td>VAT details from <?php _e('General', 'wc-invoice-pdf') ?> -&gt; <?php _e('Contact email', 'wc-invoice-pdf') ?></td>
                                    </tr>
                                    <tr>
                                        <td>{IBAN}</td>
                                        <td>IBAN from first Woocommerce BACS detail</td>
                                    </tr>
                                    <tr>
                                        <td>{BIC}</td>
                                        <td>BIC from first Woocommerce BACS detail</td>
                                    </tr>
                                    <tr>
                                        <td>{BANK_NAME}</td>
                                        <td>Bank name from first Woocommerce BACS detail</td>
                                    </tr>
                                    <tr>
                                        <td>{INVOICE_NUMBER}</td>
                                        <td>Invoice number</td>
                                    </tr>
                                    <tr>
                                        <td>{INVOICE_CREATED}</td>
                                        <td>Created date of the invoice</td>
                                    </tr>
                                    <tr>
                                        <td>{DUE_DAYS}</td>
                                        <td>The due of the invoice in days</td>
                                    </tr>
                                    <tr>
                                        <td>{DUE_DATE}</td>
                                        <td>The due date of the invoice</td>
                                    </tr>
                                </tbody>
                            </table>
                        </div>
                        <div class="wc-recurring-postbox postbox">
                            <div class="postbox-header">
                                <h4><?php _e('Content', 'wc-invoice-pdf') ?></h4>
                            </div>
                            <?php
                            $this->addField('wc_pdf_block1', 'Block #1', 'rte', ['container' => 'div', 'input_attr' => ['style'=>'width: 350px;display:inline-block;'] ]);
                            $this->addField('wc_pdf_block2', 'Block #2', 'rte', ['container' => 'div', 'input_attr' => ['style'=>'width: 350px;display:inline-block;'] ]);
                            $this->addField('wc_pdf_block3', 'Block #3', 'rte', ['container' => 'div', 'input_attr' => ['style'=>'width: 350px;display:inline-block;'] ]);
                            ?>
                        </div>
                    </div>
                </div>
                <div id="wcinvoicepdf-template" class="inside tabs-panel" style="display: none;">
                    <p>
                        Customize your templates being sent internally or to the customer<br />
                    </p>
                    <h3><?php _e('Payment report', 'wc-invoice-pdf')  ?></h3>
                    <?php
                    $attr = [
                        'label_attr' => [ 'style' => 'width: 200px; display:inline-block;vertical-align:top;'],
                        'input_attr' => ['style' => 'margin-left: 1em; width:50em;height: 200px']
                    ];
                    $this->addField('wc_payment_message', '<strong>'. __('Payment report', 'wc-invoice-pdf') .'</strong><br />Inform the administrator (see "Admin Email") about outstanding invoices', 'textarea', $attr);
                    ?>
                    <h3><?php _e('Payments', 'wc-invoice-pdf') ?></h3>
                    <?php
                    $this->addField('wc_recur_message', '<strong>' . __('Automate invoice submission', 'wc-invoice-pdf').'</strong><br />Submit the recurring invoice to the customer containing this message', 'textarea', $attr);
                    ?>
                    <div style="font-size: small;margin-left: 220px;margin-bottom: 1em;">
                        <?php printf(__('The same placeholder from %s can be used', 'wc-invoice-pdf'), __('Invoice template', 'wc-invoice-pdf')) ?>
                    </div>
                    <?php
                    $this->addField('wc_recur_reminder_message', '<strong>'. __('Payment reminder', 'wc-invoice-pdf').'</strong><br />Submit the recurring invoice to the customer containing this message', 'textarea', $attr);
                    ?>
                    <div style="font-size: small;margin-left: 220px;margin-bottom: 1em;">
                        <?php printf(__('The same placeholder from %s can be used', 'wc-invoice-pdf'), __('Invoice template', 'wc-invoice-pdf')) ?>
                    </div>
                </div>
                <div id="wcinvoicepdf-export" class="inside tabs-panel" style="display: none;">
                    <p>
                        The export feature currently supports GnuCash *.csv format to import invoices.</br />
                        Please make sure the CUSTOMER ID (in GnuCash) matches the user id in wordpress
                    </p>
                    <?php
                    $this->addField('wc_export_locale', '<strong>Locale</strong><br />Example: de_DE en_US');
                    $this->addField('wc_export_notes', '<strong>Notes</strong><br />Invoice notes');
                    $this->addField('wc_export_account', '<strong>Account name</strong><br />Name of the account an invoce is booked');
                    $this->addField('wc_export_account_posted', '<strong>Account name</strong><br />Name of the account invoce is posted');
                    $this->addField('wc_export_account_tax', '<strong>Tax Account (optional)</strong><br />Name of the tax account');
                    ?>
                </div>
            <div class="inside">
                <p></p>
                <p>
                    <?php wp_nonce_field('wc-recurring-settings'); ?>
                    <input type="submit" class="button-primary" name="submit" value="<?php _e('Save', 'wc-invoice-pdf');?>" />
                </p>
                <p></p>
            </div>
            </form>
        </div>
        <?php
    }

    public function addField($name, $title, $type = 'text', $args = [])
    {
        $xargs = [  'container' => 'p',
                    'required' => false,
                    'attr' => [],
                    'label_attr' => ['style' => 'width: 220px; display:inline-block;vertical-align:top;'],
                    'input_attr' => ['style' => 'width: 340px'],
                    'value' => ''
                ];

        if ($type == null) {
            $type = 'text';
        }

        foreach ($xargs as $k => $v) {
            if (!empty($args[$k])) {
                $xargs[$k] = $args[$k];
            }
        }

        if ($type == 'media') {
            $xargs['container'] = 'div';
        }

        echo '<' . $xargs['container'];
        foreach ($xargs['attr'] as $k => $v) {
            echo ' '.$k.'="'.$v.'"';
        }
        echo '>';
        echo '<label';
        foreach ($xargs['label_attr'] as $k => $v) {
            echo ' '. $k . '="'.$v.'"';
        }

        echo '>' . $title;
        if ($xargs['required']) {
            echo '<span style="color: red;"> *</span>';
        }
        echo '</label>';

        $attrStr = '';
        foreach ($xargs['input_attr'] as $k => $v) {
            $attrStr.= ' '.$k.'="'.$v.'"';
        }

        if (isset(WcRecurringIndex::$OPTIONS[$name])) {
            $optValue = WcRecurringIndex::$OPTIONS[$name];
        } else {
            $optValue = $xargs['value'];
        }

        if ($type == 'text' || $type == 'password' || $type == 'number') {
            echo '<input type="'.$type.'" class="regular-text" name="'.$name.'" value="'.$optValue.'"'.$attrStr.' />';
        } elseif ($type == 'email') {
            echo '<input type="'.$type.'" class="regular-text" name="'.$name.'" value="'.$optValue.'"'.$attrStr.' />';
        } elseif ($type == 'textarea') {
            echo '<textarea name="'.$name.'" '.$attrStr.'>'  . esc_attr($optValue) . '</textarea>';
        } elseif ($type == 'checkbox') {
            echo '<input type="'.$type.'" name="'.$name.'" value="1"' . (($optValue == '1')?'checked':'') .' />';
        } elseif ($type == 'rte') {
            echo '<div '.$attrStr.'>';
            wp_editor($optValue, $name, ['teeny' => true, 'editor_height'=>200, 'media_buttons' => false]);
            echo '</div>';
        } elseif ($type == 'media') {
            wp_enqueue_media();
            $url = '';
            if (intval($optValue) > 0) {
                $url = wp_get_attachment_url($optValue);
            }
            echo "<div class='image-preview-wrapper' style='display:inline-block'>";
            echo "<img id='$name-preview' src=\"$url\" style='max-height: 100px;'><br />";
            echo "<input onclick=\"WcRecuringAdmin.OpenMedia(this,'$name')\" type=\"button\" class=\"button\" value=\"" . __('Select image', 'wc-invoice-pdf') ."\" />";
            echo "<input onclick=\"WcRecuringAdmin.ClearMedia(this,'$name')\" type=\"button\" class=\"button\" value=\"" . __('Clear image', 'wc-invoice-pdf') ."\" />";
            echo "<input type='hidden' name=\"".$name."\" id='$name' value=\"$optValue\" />";
            echo "</div>";
        }
        echo '</' . $xargs['container'] .'>';
    }
}
